{"version":3,"sources":["C3.js","D3.js","G2.js","App.js","index.js"],"names":["clickData","count","unique","date","viewData","Page","ref","container","dateRange","map","totalViews","uniqueViews","totalClicks","uniqueClicks","clickThroughRate","clicks","views","view","find","click","getClickThroughRate","c3","bindto","d3","subchart","show","onbrush","domain","console","log","tooltip","grouped","position","data","width","height","element","top","left","legend","x","type","types","columns","groups","axes","names","colors","grid","y","axis","tick","format","padding","bottom","min","y2","default","max","value","bar","ratio","margin","containerHeight","containerWidth","attr","style","xScale","d","range","yScale","append","call","select","datum","y0","y1","node","Object","entries","reduce","accumulator","key","array","item","addTypeToData","chart","G2","autoFit","scale","sync","tickCount","nice","interval","color","adjust","dodgeBy","marginRatio","name","showCrosshairs","shared","slidable","marker","symbol","showMarkers","interaction","render","App","D3","C3","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0af25478.chunk.js","sourcesContent":["import React from 'react'\nimport * as c3 from 'c3'\nimport * as d3 from 'd3'\n\nimport 'c3/c3.css'\n\nconst clickData = [\n  { count: 40, unique: 5, date: '2020-10-14' },\n  { count: 28, unique: 1, date: '2020-10-15' },\n  { count: 13, unique: 3, date: '2020-10-16' },\n  { count: 8, unique: 2, date: '2020-10-17' },\n  { count: 44, unique: 0, date: '2020-10-18' },\n  { count: 13, unique: 0, date: '2020-10-19' },\n  { count: 20, unique: 6, date: '2020-10-20' },\n]\n\nconst viewData = [\n  { count: 50, unique: 0, date: '2020-10-14' },\n  { count: 110, unique: 0, date: '2020-10-15' },\n  { count: 131, unique: 1, date: '2020-10-16' },\n  { count: 125, unique: 5, date: '2020-10-17' },\n  { count: 104, unique: 4, date: '2020-10-18' },\n  { count: 108, unique: 8, date: '2020-10-19' },\n  { count: 64, unique: 4, date: '2020-10-20' },\n]\n\nfunction Page() {\n  const handleChartInit = (container) => {\n    const getClickThroughRate = ({ clicks, views }) => {\n      return views.map((view) => {\n        const click = clicks.find((click) => click.date === view.date)\n        return (click.count / view.count) * 100\n      })\n    }\n\n    const dateRange = viewData.map(({ date }) => date)\n    const totalViews = viewData.map(({ count }) => count)\n    const uniqueViews = viewData.map(({ unique }) => unique)\n    const totalClicks = clickData.map(({ count }) => count)\n    const uniqueClicks = clickData.map(({ unique }) => unique)\n    const clickThroughRate = getClickThroughRate({\n      views: viewData,\n      clicks: clickData,\n    })\n\n    c3.generate({\n      bindto: d3.select(container),\n      subchart: {\n        show: false,\n        subchart: {\n          onbrush: function (domain) {\n            console.log(domain)\n          },\n        },\n      },\n      tooltip: {\n        show: true,\n        grouped: true,\n        position: function (data, width, height, element) {\n          return { top: 0, left: 0 }\n        },\n      },\n      legend: {\n        show: true,\n      },\n      data: {\n        x: 'dateRange',\n        type: 'bar',\n        types: {\n          clickThroughRate: 'line',\n        },\n        columns: [\n          ['dateRange', ...dateRange],\n          ['totalViews', ...totalViews],\n          ['uniqueViews', ...uniqueViews],\n          ['totalClicks', ...totalClicks],\n          ['uniqueClicks', ...uniqueClicks],\n          ['clickThroughRate', ...clickThroughRate],\n        ],\n        groups: [\n          ['totalViews', 'uniqueViews'],\n          ['totalClicks', 'uniqueClicks'],\n        ],\n        axes: {\n          clickThroughRate: 'y2',\n        },\n        names: {\n          totalViews: 'Total Views',\n          uniqueViews: 'Unique Views',\n          totalClicks: 'Total Clicks',\n          uniqueClicks: 'Unique Clicks',\n          clickThroughRate: 'CTR',\n        },\n        colors: {\n          totalViews: '#7aebbc',\n          uniqueViews: '#00d775',\n          totalClicks: '#c0a4ff',\n          uniqueClicks: '#7c41ff',\n          clickThroughRate: '#00b6ff',\n        },\n      },\n      grid: {\n        y: {\n          show: true,\n        },\n      },\n      axis: {\n        x: {\n          type: 'timeseries',\n          tick: {\n            format: '%m/%d',\n          },\n        },\n        y: {\n          padding: { bottom: 0 },\n          min: 0,\n          tick: {\n            count: 6,\n            format: d3.format('$,'),\n          },\n        },\n        y2: {\n          default: [0, 100],\n          type: 'linear',\n          padding: { top: 0, bottom: 0 },\n          show: true,\n          min: 0,\n          max: 100,\n          // max: d3.max(clickThroughRate) <= 100 ? 100 : d3.max(clickThroughRate),\n          tick: {\n            count: 6,\n            format: (value) => `${value}%`,\n          },\n        },\n      },\n      bar: {\n        width: {\n          ratio: 0.5,\n        },\n      },\n    })\n  }\n\n  return <div ref={handleChartInit} />\n}\n\nexport default Page\n","import React from 'react';\nimport * as d3 from 'd3'\n\nconst clickData = [\n  { \"count\": 5,\"date\": \"2020-10-14\" },\n  { \"count\": 11,\"date\": \"2020-10-15\" },\n  { \"count\": 13,\"date\": \"2020-10-16\" },\n  { \"count\": 12,\"date\": \"2020-10-17\" },\n  { \"count\": 10,\"date\": \"2020-10-18\" },\n  { \"count\": 10,\"date\": \"2020-10-19\" },\n  { \"count\": 6,\"date\": \"2020-10-20\"}\n]\n\nconst viewData = [\n  { \"count\": 50,\"date\": \"2020-10-14\" },\n  { \"count\": 110,\"date\": \"2020-10-15\" },\n  { \"count\": 131,\"date\": \"2020-10-16\" },\n  { \"count\": 125,\"date\": \"2020-10-17\" },\n  { \"count\": 104,\"date\": \"2020-10-18\" },\n  { \"count\": 108,\"date\": \"2020-10-19\" },\n  { \"count\": 64,\"date\": \"2020-10-20\" }\n]\n\nfunction Page() {\n  const margin = { top: 60, right: 60, bottom: 60, left: 60 }\n  const graphHeight = 300\n  const graphWidth = 600\n  const containerHeight = graphHeight + margin.top + margin.bottom\n  const containerWidth = graphWidth + margin.left + margin.right\n\n\n  const handleChartInit = (element) => {\n\n    let container = d3.select(element)\n    .attr(\"height\", containerHeight)\n    .attr(\"width\", containerWidth)\n    .style(\"border\", \"1px solid #DDDDDD\")\n\n    const xScale = d3.scaleTime()\n    .domain(d3.extent(clickData, (d) => d3.timeParse(\"%Y-%m-%d\")(d.date)))\n    .range([0, graphWidth])\n\n    const yScale = d3.scaleLinear()\n    .domain([0, d3.max(clickData, d => d.count)])\n    .range([graphHeight, 0])\n\n    container.append(\"g\")\n    .attr(\"id\", \"xAxis\")\n    .attr('transform', `translate(${margin.left}, ${graphHeight + margin.top})`)\n    .call(d3.axisBottom(xScale))\n\n    container.append(\"g\")\n    .attr(\"id\", \"yAxis\")\n    .attr('transform', `translate(${margin.left}, ${margin.top})`)\n    .call(d3.axisLeft(yScale))\n\n    container\n    .select(\"path\")\n      .datum(clickData)\n      .attr(\"fill\", \"#cce5df\")\n      .attr(\"stroke\", \"#69b3a2\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"d\", d3.area()\n        .x(function(d) { return xScale(d3.timeParse(\"%Y-%m-%d\")(d.date)) })\n        .y0(yScale(0))\n        .y1(function(d) { return yScale(d.count) })\n        )\n\n\n    // container\n    // .selectAll(\"rect\")\n    // .data(clickData)\n    // .enter()\n    // .append(\"rect\")\n    // .attr(\"fill\", \"#69b3a2\")\n    // .attr(\"width\", (d, index) => xScale(index))\n    // .attr(\"height\", y.bandwidth() )\n    // .attr('x', xScale(0))\n\n    return container.node()\n  }\n\n  return (\n    <svg ref={handleChartInit} />\n  );\n}\n\nexport default Page;\n","import React from 'react'\nimport * as G2 from '@antv/g2'\nimport DataSet from '@antv/data-set'\n\nconst clickData = [\n  { count: 40, unique: 5, date: '2020-10-14' },\n  { count: 28, unique: 1, date: '2020-10-15' },\n  { count: 13, unique: 3, date: '2020-10-16' },\n  { count: 8, unique: 2, date: '2020-10-17' },\n  { count: 44, unique: 0, date: '2020-10-18' },\n  { count: 13, unique: 0, date: '2020-10-19' },\n  { count: 20, unique: 6, date: '2020-10-20' },\n]\n\nconst viewData = [\n  { count: 50, unique: 0, date: '2020-10-14' },\n  { count: 110, unique: 0, date: '2020-10-15' },\n  { count: 131, unique: 1, date: '2020-10-16' },\n  { count: 125, unique: 5, date: '2020-10-17' },\n  { count: 104, unique: 4, date: '2020-10-18' },\n  { count: 108, unique: 8, date: '2020-10-19' },\n  { count: 64, unique: 4, date: '2020-10-20' },\n]\n\nfunction Page() {\n  const addTypeToData = (data) => {\n    return Object.entries(data).reduce((accumulator, [key, array]) => {\n      return [...accumulator, ...array.map((item) => ({ ...item, type: key }))]\n    }, [])\n  }\n\n  const handleChartInit = (element) => {\n    const data = addTypeToData({ clicks: clickData, views: viewData })\n\n    const chart = new G2.Chart({\n      container: element,\n      autoFit: true,\n      height: 500,\n      padding: 100,\n    }).data(data)\n\n    // Create alternative view for CTR part\n    // const view = chart.createView({})\n\n    chart.scale({\n      date: { type: 'category' },\n      count: { sync: 'x1', tickCount: 6, nice: true },\n      unique: { sync: 'x1', tickCount: 6 },\n    })\n\n    chart.axis({\n      count: { position: 'left' },\n      unique: { position: 'left', grid: null },\n      date: { position: 'bottom' },\n    })\n\n    chart\n      .interval()\n      .position('date*count')\n      .color('type', ['#b7f3d7', '#dac9ff'])\n      .adjust([{ type: 'dodge', dodgeBy: 'type', marginRatio: 0 }])\n      .tooltip('type*count', (type, value) => {\n        return { value, name: `Total ${type}` }\n      })\n\n    chart\n      .interval()\n      .position('date*unique')\n      .color('type', ['#39e09b', '#7551e9'])\n      .adjust([{ type: 'dodge', dodgeBy: 'type', marginRatio: 0 }])\n      .tooltip('type*unique', (type, value) => {\n        return { value, name: `Unique ${type}` }\n      })\n\n    chart.tooltip({\n      showCrosshairs: false,\n      shared: true,\n    })\n\n    chart.legend({\n      slidable: false,\n      marker: {\n        symbol: 'circle',\n      },\n    })\n\n    // chart.interaction('tooltip', {\n    //   start: [{ trigger: 'plot:click', action: 'tooltip:show' }],\n    // })\n\n    chart.tooltip({\n      showMarkers: false, // 不展示 tooltip markers\n      shared: true,\n    })\n\n    chart.interaction('active-region') // 使用 active-region 交互行为\n\n    chart.render()\n  }\n\n  return <div ref={handleChartInit} />\n}\n\nexport default Page\n","import React from 'react'\nimport C3 from './C3'\nimport D3 from './D3'\nimport G2 from './G2'\n\nfunction App() {\n  return (\n    <>\n      <D3 />\n      <C3 />\n      <G2 />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}